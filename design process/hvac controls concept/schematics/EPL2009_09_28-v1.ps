%!PS-Adobe-3.0
%%Creator: gEDA gschem 20090328
%%CreationDate: Wed Sep 30 11:25:21 2009
%%Title: /home/fosse/Documents/projects/chamber heat/schematics/EPL2009_09_28-v1.sch
%%Author: fosse
%%BoundingBox: 0 0 612 792
%%Orientation: Landscape
%%Pages: 1
%%Endcomments
%%BeginProlog
% Prolog for gEDA, define all the functions needed for rendering
% schematics on Postscript devices


% Draw a line from the second coordinate to the first
% x2 y2 x1 y1 width line -
/line {
    setlinewidth
    % pop off first element and moveto
    moveto
    % pop off remaining elements and draw a line segment
    lineto
    % draw it
    stroke
} bind def


% Draw a dot
% x y r dot -
/dot {
    0 360 arc fill
} bind def

% Draw a dot-dashed line, a bunch of lined segments,
% if the array element only has length two, draw a dot.
% [ [x2 y2 x1 y1] [x4 y4 x3 y3] [x5 y5] ... ] width dashed -
/width 0 def
/dashed {
    dup 2.0 div /width exch def
    setlinewidth
    % pop off each line segment and draw it as a dot or as a line
    {
	aload length 2 gt
	{ moveto lineto stroke}
	{ width dot } ifelse
    } forall
} bind def

% Draw an arc segment
% x y r ang1 ang2 width darc -
/darc {
    setlinewidth
    arc stroke
} bind def

% Draw a series of arc segment bits, if the array element only has a single
% element in it, draw a dot.
% [ [sa1 ea1] [sa2 ea2] ... ] x y r width dashedarc -
/x 0 def
/y 0 def
/dashedarc {
    dup /width exch def
    setlinewidth
    /r exch def  
    /y exch def
    /x exch def
    { aload length 1 gt
	{
	    % this element had two angles in it
	    % extract start and stop angles
	    x y r   % drop x y and r onto stack
		    % at this point we have: sa ea x y r
		    % we need                      x y r sa ea
		    % so..
	    5 -2 roll
	    % and add it to the current path, and draw it
	    arc stroke
	} {
	    % this element only had one angle in it, place a
	    % filled dot at the appropriate place
	    % compute center point of the arc using the angle
	    % that is on the top of the stack
	    dup   		% angle angle
	    cos r mul x add 	% angle x
	    exch		% x angle
	    sin r mul y add	% x y
	    width		% x y width/2
	    dot			% draw the dot
	} ifelse
    } forall

    % Now draw it
    stroke
} bind def

% Draw a box
% width height x y linethickness box -
/box {
    setlinewidth
    moveto
    exch dup 0 rlineto	 % w h, h w w 0      -- Draw bottom line
    exch 0 exch rlineto	 % h w, w h 0, w 0 h -- Draw right line 
    neg 0 rlineto	 % w, -w 0           -- Draw Top line
    closepath		 % finish and draw it
    stroke
} bind def			     

% Draw a filled box
% width height x y fbox -
/fbox {
    moveto
    exch dup 0 rlineto	
    exch 0 exch rlineto	
    neg 0 rlineto		
    closepath			
    fill			
} bind def

% Font reincoding utilities

% ISOLatin1Encoding, extended with remaining uncoded glyphs
/ISOLatin1Extended [
    /.notdef /Lslash /lslash /OE /oe /Scaron /scaron /Zcaron /zcaron
    /Ydieresis /trademark /bullet /dagger /daggerdbl /ellipsis /emdash
    /endash /fi /fl /florin /fraction /guilsinglleft /guilsinglright
    /perthousand /quotedblbase /quotedblleft /quotedblright
    /quotesinglbase /quotesingle /.notdef /.notdef /.notdef /space
    /exclam /quotedbl /numbersign /dollar /percent /ampersand
    /quoteright /parenleft /parenright /asterisk /plus /comma /minus
    /period /slash /zero /one /two /three /four /five /six /seven /eight
    /nine /colon /semicolon /less /equal /greater /question /at /A /B /C
    /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z
    /bracketleft /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s
    /t /u /v /w /x /y /z /braceleft /bar /braceright /asciitilde
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /dotlessi /grave /acute /circumflex
    /tilde /macron /breve /dotaccent /dieresis /.notdef /ring /cedilla
    /.notdef /hungarumlaut /ogonek /caron /space /exclamdown /cent
    /sterling /currency /yen /brokenbar /section /dieresis /copyright
    /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
    /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown /Agrave /Aacute
    /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute
    /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth
    /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
    /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
    /ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave
    /iacute /icircumflex /idieresis /eth /ntilde /ograve /oacute
    /ocircumflex /otilde /odieresis /divide /oslash /ugrave /uacute
    /ucircumflex /udieresis /yacute /thorn /ydieresis
] def

% `new-font-name' `encoding-vector' `old-font-name' RE -
/RE {
    findfont
    dup maxlength dict begin {
        1 index /FID ne { def } { pop pop } ifelse
    } forall
    /Encoding exch def
    dup /FontName exch def
    currentdict end definefont pop
} bind def

% Text handling functions, select the font and scale it, then we need
% only to apply the appropriate transformations to get the text
% justified into the right spots.  The bad thing here is that we don't
% do any kerning, so the output may look a bit strange.

% compute the height of one character and return lly and ury
% (char) charheight lly ury
/charheight {
    gsave			% push graphics state
	newpath			% clear current path
	0 0 moveto		% Set current point
	false charpath		% get path
	flattenpath		% flatten path
	pathbbox		% stack = llx lly urx ury
	exch pop		% stack = llx lly ury
	3 -1 roll pop		% stack = lly ury
    grestore			% pop graphics state
} bind def

% compute the height of a string, one character at a time
% (string) stringheight lly ury
/lly 0.0 def
/ury 0.0 def

/stringheight {
    /lly 0.0 def			% initial value of heightmin
    /ury 0.0 def			% initial value of heightmax
    {				% work through string
	( ) dup 0 4 -1 roll put	% create one character string
	charheight		% measure it's height
	dup ury gt {		% if ury gt heightmax
	    /ury exch def	% update with new value
	} {
	    pop			% else discard ury
	} ifelse
	dup lly lt {		% if lly lt heightmin
	    /lly exch def	% update with new value
	} {
	    pop			% else discard lly
	} ifelse
    } forall
    lly ury			% Return the results
} bind def

% calculate the string width taking into account the escapes.
/mystrx 0.0 def
/mystry 0.0 def
/mystresc false def

/mystringwidth {
    /mystrx 0.0 def
    /mystry 0.0 def
    /mystresc false def
    {				% work through string
	% did we process the escape character last?
	mystresc {
	    % last character was escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
		% toggle drawing overbars
		0.0 0.0 % make it like it never happened...
	    } {
		% otherwise measure the character 
		(\\ ) dup 1 4 -1 roll put % count a \ and the character
		stringwidth
	    } ifelse
	    % and reset the flag
	    /mystresc false def
	} {
	    % last character was not escape
	    % is this escape
	    dup 92 eq {
		% yes, escape character, set flag
		/mystresc true def
		pop % drop character
		0.0 0.0 % make like this character has no width and height
	    } {
		( ) dup 0 4 -1 roll put	% create one character string
		stringwidth		% measure it's height/width
	    } ifelse
	} ifelse
	% accumulate x and y movements
	mystry add /mystry exch def
	mystrx add /mystrx exch def
    } forall
    mystrx mystry % drop results on stack
} bind def

% Render a string with overbars
%
/escaped false def
/drawoverbar false def
/fontsize 0.0 def

%string1 string2 append -
/append {
    2 copy length exch length add % find new length
    string dup % string1 string2 string string
    4 2 roll % string string string1 string2
    2 index 0 3 index
    % string string string1 string2 string 0 string1
    putinterval % string string string1 string2
    exch length exch putinterval
} bind def

% If drawoverbar is set, draw a line of the same length as the given string
% string overbarshowline -
/overbarshowline {
    % print overbar if necessary
    stringwidth pop 0
    drawoverbar {
        rlineto
        gsave stroke grestore
    } {
        rmoveto
    } ifelse
} bind def

% Draws overbars for the given string, then shows the string itself
% string overbarshow
/overbarshow {
    /overbarshowacc () def
    /overbarshowtxt () def

    gsave
    fontsize 10.0 div setlinewidth
    0 fontsize rmoveto  % move to (0,overbarheight)

    {				% work through string
	escaped {
	    % the last character was the escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
                overbarshowacc overbarshowline
                % toggle drawing overbars
		/drawoverbar drawoverbar not def

                % Append the contents off the accumulator to the text
                % string we're eventually going to show
                /overbarshowtxt overbarshowtxt overbarshowacc append def

                % clear accumulator
                /overbarshowacc () def
	    } {
                % add to accumulator
                (\\ ) dup 1 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	    % and reset the flag
	    /escaped false def
	} {
	    % check for escape character \ = 92
	    dup 92 eq {
		% yes, escape character, set flag
		/escaped true def
		pop % drop character
	    } {
                % add to accumulator
                ( ) dup 0 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	} ifelse
    } forall
    % Catch any leftovers
    overbarshowacc overbarshowline
    overbarshowtxt overbarshowacc append

    grestore
    show
} bind def

% 
% hcenter rjustify vcenter vjustify spacing [(line1) (line2) ... ] rot x y size text -
/stringw 0.0 def
/stringh 0.0 def
/spacing 0.0 def
/strings [ ] def
/stringtxt ( ) def
/stringcount 0 def
/rot 0.0 def

/text {
    gsave	        % save state for later
    /drawoverbar false def      % start by not drawing overbars

    dup /fontsize exch def  % save font size for corrections later
    % do font selection 
    /gEDAFont findfont
    exch scalefont
    setfont

    % set up coordinates
    translate           % move origin to given point
    rotate		% rotate so that text is drawn
    0 0 moveto
    dup length /stringcount exch def			% Get number of strings
    /strings exch def     				% save strings
    /spacing exch def
    % do we have more than 1 string to render?
    stringcount 1 eq {
	/stringtxt strings aload pop def		% get the string 
	/stringw stringtxt mystringwidth pop neg def	% get the -width
	/stringh stringtxt stringheight exch pop neg def% get the -height

	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh rmoveto } if 
	% vertical center
	{ 0 stringh 0.3571425 mul rmoveto } if  % not 0.5, so that
						% it looks nicer
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% Draw the text
	stringtxt overbarshow
    } {
	% More than one line, compute bounding box for the text

	% vertical height, don't use the actual hieght of the characters
	% assume that the user wants to make the baselines line up with two
	% text boxes placed side by side
	/stringh stringcount spacing mul neg def
	% Now figure out horizontal size, this amounts to keeping track
	% of the longest string
	/stringw 0.0 def
	strings {
	    mystringwidth pop
	    dup stringw gt {
		/stringw exch def
	    } {
		pop
	    } ifelse
	} forall
	/stringw stringw neg def 	% get the -width
	
	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh fontsize add rmoveto } if 
	% vertical center
	{ 0 stringh 0.5 mul rmoveto } if 
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% now move up to the first line and begin rendering
	0 stringcount 1 sub spacing mul rmoveto
	strings {
	    gsave		% Save starting point
	    overbarshow		% render the text
	    grestore
	    0 spacing neg rmoveto
	} forall
    } ifelse
    grestore 	% Restore old state
} bind def


%%EndProlog
%%Page: 1 1
/gEDAFont ISOLatin1Extended /Helvetica RE
2 setlinecap
0.072000 0.072000 scale
7485 499 translate 90 rotate
0.588235 0.588235 scale
-40000 -40000 translate
gsave
40000 40000 57000 40000 10 line
57000 40000 57000 51000 10 line
57000 51000 40000 51000 10 line
40000 51000 40000 40000 10 line
52900 40600 52900 40000 10 line
gsave
false false false false 208.000000 [(FILE:) ] 0 49500 40400 111.111115 text
grestore
gsave
false false false false 208.000000 [(REVISION:) ] 0 53000 40400 111.111115 text
grestore
gsave
false false false false 208.000000 [(DRAWN BY: ) ] 0 53000 40100 111.111115 text
grestore
gsave
false false false false 208.000000 [(PAGE) ] 0 49500 40100 111.111115 text
grestore
gsave
false false false false 208.000000 [(OF) ] 0 51200 40100 111.111115 text
grestore
gsave
false false false false 208.000000 [(TITLE) ] 0 49500 40700 111.111115 text
grestore
49400 40000 57000 40000 10 line
57000 40000 57000 41400 10 line
57000 41400 49400 41400 10 line
49400 41400 49400 40000 10 line
49400 40600 57000 40600 10 line
grestore
gsave
52600 45400 52800 45400 10 line
gsave
false false false false 208.000000 [(H) ] 0 52855 45395 111.111115 text
grestore
52600 44800 52800 44800 10 line
gsave
false false false false 208.000000 [(N) ] 0 52855 44795 111.111115 text
grestore
52600 44200 52800 44200 10 line
gsave
false false false false 208.000000 [(G) ] 0 52855 44195 111.111115 text
grestore
53800 44800 400 0 360 10 darc
53800 44800 700 188 262 10 darc
53703 44107 53800 44400 10 line
53107 44703 53400 44800 10 line
53800 44800 700 278 352 10 darc
54493 44703 54200 44800 10 line
53897 44107 53800 44400 10 line
53800 44800 700 8 82 10 darc
53897 45493 53800 45200 10 line
54493 44897 54200 44800 10 line
53800 44800 700 98 172 10 darc
53107 44897 53400 44800 10 line
53703 45493 53800 45200 10 line
53800 44800 800 0 360 10 darc
52800 43900 54700 43900 10 line
54700 43900 54700 45700 10 line
54700 45700 52800 45700 10 line
52800 45700 52800 43900 10 line
gsave
true false true false 260.000000 [(Fan) ] 0 53800 44800 138.888885 text
grestore
grestore
gsave
54000 49800 54200 49800 10 line
54000 48100 54200 48100 10 line
55200 49600 55100 49400 10 line
55100 49400 55000 49600 10 line
55000 49600 54900 49400 10 line
54900 49400 54800 49600 10 line
55200 49600 55300 49400 10 line
55300 49400 55350 49500 10 line
54801 49600 54750 49500 10 line
55350 49500 55600 49500 10 line
55600 49500 55600 49250 10 line
54900 48300 55000 48500 10 line
55000 48500 55100 48300 10 line
55100 48300 55200 48500 10 line
55200 48500 55300 48300 10 line
54900 48300 54800 48500 10 line
54800 48500 54750 48400 10 line
55299 48300 55350 48400 10 line
54750 48400 54500 48400 10 line
54750 49500 54500 49500 10 line
54500 49500 54500 48400 10 line
55600 48650 55600 48400 10 line
55600 48400 55350 48400 10 line
55500 49100 55700 49000 10 line
55700 49000 55500 48900 10 line
55500 48900 55700 48800 10 line
55700 48800 55500 48700 10 line
55500 49100 55700 49200 10 line
55700 49200 55600 49250 10 line
55500 48701 55600 48650 10 line
gsave
true false true false 260.000000 [(Delta) ] 0 54900 48800 138.888885 text
grestore
54200 49800 55600 49800 10 line
55600 49800 55600 49500 10 line
54200 48100 55600 48100 10 line
55600 48100 55600 48400 10 line
54500 48900 54200 48900 10 line
54000 48900 54200 48900 10 line
grestore
gsave
true false true false 260.000000 [(Heater) ] 0 54901 49005 138.888885 text
grestore
51500 51000 51500 41400 10 line
gsave
false false false false 260.000000 [(In duct) ] 0 51600 50800 138.888885 text
grestore
gsave
false true false false 260.000000 [(In/On Gray Boxes) ] 0 51400 50800 138.888885 text
grestore
gsave
54000 46900 54200 46900 10 line
54000 46200 54200 46200 10 line
54200 46200 54700 46200 10 line
54500 46600 54900 46600 10 line
54500 46500 54900 46500 10 line
54200 46900 54700 46900 10 line
54700 46900 54700 46600 10 line
54700 46500 54700 46200 10 line
54900 46700 54500 46400 10 line
grestore
gsave
false false false true 260.000000 [(Automatic Cutout) (Built into Heater) (\(Over Heating\)) ] 0 54500 47800 138.888885 text
grestore
gsave
false false false false 260.000000 [(Airflow) ] 0 55100 46400 138.888885 text
grestore
gsave
50500 46900 50300 46900 10 line
50500 46100 50300 46100 10 line
50300 46100 49800 46100 10 line
50300 46900 49800 46900 10 line
49800 46900 49800 46700 10 line
49800 46300 49800 46100 10 line
48600 46000 48800 46000 10 line
48600 45700 48800 45700 10 line
48800 45700 49500 45700 10 line
49100 45800 49100 46200 10 line
49200 45800 49200 46200 10 line
48800 46000 49100 46000 10 line
49200 46000 49500 46000 10 line
49800 46500 200 0 360 10 darc
gsave
true false true false 260.000000 [(C) ] 0 49800 46500 138.888885 text
grestore
49500 46000 49500 45700 10 line
48600 46600 48800 46600 10 line
48600 46300 48800 46300 10 line
48800 46300 49500 46300 10 line
49100 46400 49100 46800 10 line
49200 46400 49200 46800 10 line
48800 46600 49100 46600 10 line
49200 46600 49500 46600 10 line
49500 46600 49500 46300 10 line
48600 47200 48800 47200 10 line
48600 46900 48800 46900 10 line
48800 46900 49500 46900 10 line
49100 47000 49100 47400 10 line
49200 47000 49200 47400 10 line
48800 47200 49100 47200 10 line
49200 47200 49500 47200 10 line
49500 47200 49500 46900 10 line
48800 45600 50300 45600 10 line
50300 45600 50300 47500 10 line
50300 47500 48800 47500 10 line
48800 47500 48800 45600 10 line
grestore
gsave
48000 44800 48200 44800 10 line
48000 44000 48200 44000 10 line
48200 44000 48700 44000 10 line
48200 44800 48700 44800 10 line
48700 44800 48700 44600 10 line
48700 44200 48700 44000 10 line
49900 44400 49700 44400 10 line
49900 44100 49700 44100 10 line
49700 44100 49000 44100 10 line
49400 44200 49400 44600 10 line
49300 44200 49300 44600 10 line
49700 44400 49400 44400 10 line
49300 44400 49000 44400 10 line
48700 44400 200 0 360 10 darc
gsave
true false true false 260.000000 [(C) ] 0 48700 44400 138.888885 text
grestore
49000 44400 49000 44100 10 line
48200 43900 49700 43900 10 line
49700 43900 49700 44900 10 line
49700 44900 48200 44900 10 line
48200 44900 48200 43900 10 line
grestore
gsave
false false false false 260.000000 [(Evan Foss) ] 0 54000 40100 138.888885 text
grestore
gsave
false false false false 260.000000 [(New +100Deg. Configuration) ] 0 50000 40700 138.888885 text
grestore
gsave
false false false false 260.000000 [(1) ] 0 50000 40100 138.888885 text
grestore
gsave
false false false false 260.000000 [(1) ] 0 51500 40100 138.888885 text
grestore
gsave
41500 49900 41200 49900 10 line
gsave
false false false false 208.000000 [(24V) ] 0 41555 49895 111.111115 text
grestore
gsave
false true false false 260.000000 [(1) ] 0 41405 49945 138.888885 text
grestore
41500 49600 41200 49600 10 line
gsave
false false false false 208.000000 [(0V) ] 0 41555 49595 111.111115 text
grestore
gsave
false true false false 260.000000 [(2) ] 0 41405 49645 138.888885 text
grestore
43700 49200 44000 49200 10 line
gsave
false true false false 208.000000 [(AO2) ] 0 43645 49195 111.111115 text
grestore
gsave
false false false false 260.000000 [(4) ] 0 43800 49300 138.888885 text
grestore
43700 49500 44000 49500 10 line
gsave
false true false false 208.000000 [(AO1) ] 0 43645 49495 111.111115 text
grestore
gsave
false false false false 260.000000 [(3) ] 0 43800 49600 138.888885 text
grestore
41500 48000 43700 48000 10 line
43700 48000 43700 50200 10 line
43700 50200 41500 50200 10 line
41500 50200 41500 48000 10 line
gsave
true false true false 260.000000 [(TCY3-T0121R) ] 0 43100 50300 138.888885 text
grestore
43700 48600 44000 48600 10 line
gsave
false true false false 208.000000 [(N.C.) ] 0 43645 48595 111.111115 text
grestore
gsave
false false false false 260.000000 [(6) ] 0 43800 48700 138.888885 text
grestore
41500 48300 41200 48300 10 line
gsave
false false false false 208.000000 [(0V) ] 0 41555 48295 111.111115 text
grestore
gsave
false true false false 260.000000 [(8) ] 0 41405 48345 138.888885 text
grestore
41500 48900 41200 48900 10 line
gsave
false false false false 208.000000 [(DI 1) ] 0 41555 48895 111.111115 text
grestore
gsave
false true false false 260.000000 [(5) ] 0 41405 48945 138.888885 text
grestore
41500 48600 41200 48600 10 line
gsave
false false false false 208.000000 [(RT) ] 0 41555 48595 111.111115 text
grestore
gsave
false true false false 260.000000 [(7) ] 0 41405 48645 138.888885 text
grestore
grestore
gsave
true false true false 260.000000 [(Therm1) ] 0 41800 50300 138.888885 text
grestore
51300 49200 53000 49200 10 line
53000 49200 53000 49800 10 line
53000 49800 54000 49800 10 line
51300 48900 54000 48900 10 line
54000 48100 53000 48100 10 line
53000 48100 53000 48600 10 line
53000 48600 51300 48600 10 line
44000 49500 47100 49500 10 line
41200 49600 40400 49600 10 line
40400 47500 47500 47500 10 line
47500 47500 47500 49100 10 line
47500 49100 48500 49100 10 line
48500 48700 47900 48700 10 line
47900 48700 47900 47200 10 line
48500 48400 48100 48400 10 line
48100 48400 48100 46600 10 line
48500 48100 48300 48100 10 line
48300 48100 48300 46000 10 line
47900 47200 48600 47200 10 line
48100 46600 48600 46600 10 line
48300 46000 48600 46000 10 line
48600 46900 47800 46900 10 line
48600 46300 47500 46300 10 line
48600 45700 47800 45700 10 line
50500 46900 54000 46900 10 line
50500 46100 50800 46100 10 line
50800 46100 50800 45300 10 line
50800 45300 48200 45300 10 line
48200 45300 48200 46300 10 line
54000 46200 51100 46200 10 line
51100 46200 51100 45100 10 line
51100 45100 48000 45100 10 line
48000 45100 48000 45700 10 line
41200 48600 40600 48600 10 line
40600 48600 40600 50700 10 line
40600 50700 54000 50700 10 line
48500 49700 47100 49700 10 line
47100 49700 47100 49500 10 line
40400 50500 53500 50500 10 line
53500 50500 53500 50100 10 line
53500 50100 54000 50100 10 line
49900 44400 52000 44400 10 line
52000 44400 52000 45400 10 line
52000 45400 52600 45400 10 line
49900 44100 50500 44100 10 line
50500 44100 50500 42200 10 line
52600 44800 52200 44800 10 line
50800 44000 50800 41900 10 line
52600 44200 52400 44200 10 line
51100 43700 51100 41600 10 line
47800 44600 40400 44600 10 line
40400 48300 41200 48300 10 line
gsave
54000 50700 54200 50700 10 line
54000 50100 54200 50100 10 line
54200 50100 54700 50100 10 line
54200 50700 54700 50700 10 line
54700 50500 200 0 90 10 darc
54700 50300 200 270 360 10 darc
54900 50500 54900 50300 10 line
54900 50300 55200 50300 10 line
55200 50500 54900 50500 10 line
55200 50400 100 270 450 10 darc
gsave
false false false false 260.000000 [(Thermistor) ] 0 55000 50100 138.888885 text
grestore
grestore
gsave
false false false false 260.000000 [(NTC 10K) ] 0 54995 50595 138.888885 text
grestore
48000 44800 40200 44800 10 line
40200 49900 41200 49900 10 line
gsave
42300 41100 42500 41100 10 line
42000 41100 41900 41200 10 line
42000 41100 41900 41000 10 line
42300 41100 42000 41100 10 line
grestore
gsave
false true true false 260.000000 [(Hot) ] 0 41900 41100 138.888885 text
grestore
gsave
42300 40800 42500 40800 10 line
42000 40800 41900 40900 10 line
42000 40800 41900 40700 10 line
42300 40800 42000 40800 10 line
grestore
gsave
false true true false 260.000000 [(Neutral) ] 0 41900 40800 138.888885 text
grestore
gsave
42300 40500 42500 40500 10 line
42000 40500 41900 40600 10 line
42000 40500 41900 40400 10 line
42300 40500 42000 40500 10 line
grestore
gsave
false true true false 260.000000 [(Cold) ] 0 41900 40500 138.888885 text
grestore
48500 42200 48500 41100 10 line
48500 41100 42500 41100 10 line
48800 41900 48800 40800 10 line
48800 40800 42500 40800 10 line
49100 41600 49100 40500 10 line
49100 40500 42500 40500 10 line
50800 44000 52200 44000 10 line
52200 44000 52200 44800 10 line
51100 43700 52400 43700 10 line
52400 43700 52400 44200 10 line
41300 41300 41100 41100 10 line
41100 41100 41100 40500 10 line
41100 40500 41300 40300 10 line
gsave
false true true false 260.000000 [(1 Phase) (Power In) ] 0 41000 40800 138.888885 text
grestore
gsave
46500 45900 46650 45900 10 line
gsave
false false false false 208.000000 [(1) ] 0 46550 45950 111.111115 text
grestore
46800 45850 47200 45850 10 line
47350 45900 47500 45900 10 line
gsave
false false false false 208.000000 [(2) ] 0 47400 45950 111.111115 text
grestore
46650 45900 46825 45900 10 line
47350 45900 47175 45900 10 line
46839 45900 14 0 360 10 darc
47162 45901 14 0 360 10 darc
46500 46300 46650 46300 10 line
gsave
false false false false 208.000000 [(1) ] 0 46550 46350 111.111115 text
grestore
46800 46250 47200 46250 10 line
47350 46300 47500 46300 10 line
gsave
false false false false 208.000000 [(2) ] 0 47400 46350 111.111115 text
grestore
47000 46250 47000 46300 10 line
46650 46300 46825 46300 10 line
47350 46300 47175 46300 10 line
46839 46300 14 0 360 10 darc
47162 46301 14 0 360 10 darc
46500 46700 46650 46700 10 line
gsave
false false false false 208.000000 [(1) ] 0 46550 46750 111.111115 text
grestore
46800 46650 47200 46650 10 line
47350 46700 47500 46700 10 line
gsave
false false false false 208.000000 [(2) ] 0 47400 46750 111.111115 text
grestore
47000 46650 47000 46850 10 line
46650 46700 46825 46700 10 line
47350 46700 47175 46700 10 line
46839 46700 14 0 360 10 darc
47162 46701 14 0 360 10 darc
47000 46350 47000 46400 10 line
47000 46450 47000 46500 10 line
47000 46550 47000 46600 10 line
47000 45850 47000 45900 10 line
47000 45950 47000 46000 10 line
47000 46050 47000 46100 10 line
47000 46150 47000 46200 10 line
grestore
gsave
false false false false 260.000000 [(S1) ] 0 46900 46950 138.888885 text
grestore
gsave
44800 45900 45000 45900 10 line
44500 45900 44400 46000 10 line
44500 45900 44400 45800 10 line
44800 45900 44500 45900 10 line
grestore
gsave
false true true false 260.000000 [(Phase3) ] 0 44300 45900 138.888885 text
grestore
gsave
44800 46300 45000 46300 10 line
44500 46300 44400 46400 10 line
44500 46300 44400 46200 10 line
44800 46300 44500 46300 10 line
grestore
gsave
false true true false 260.000000 [(Phase2) ] 0 44300 46300 138.888885 text
grestore
gsave
44800 46700 45000 46700 10 line
44500 46700 44400 46800 10 line
44500 46700 44400 46600 10 line
44800 46700 44500 46700 10 line
grestore
gsave
false true true false 260.000000 [(Phase1) ] 0 44300 46700 138.888885 text
grestore
43600 46900 43400 46700 10 line
43400 46700 43400 45900 10 line
43400 45900 43600 45700 10 line
gsave
false true true false 260.000000 [(3 Phase) (Power In) ] 0 43300 46300 138.888885 text
grestore
47500 45900 47800 45900 10 line
47800 45900 47800 45700 10 line
47500 46700 47800 46700 10 line
47800 46700 47800 46900 10 line
gsave
45300 45900 45500 45900 10 line
46000 45900 46200 45900 10 line
45625 45900 125 180 360 10 darc
45875 45900 125 0 180 10 darc
45300 46300 45500 46300 10 line
46000 46300 46200 46300 10 line
45625 46300 125 180 360 10 darc
45875 46300 125 0 180 10 darc
45300 46700 45500 46700 10 line
46000 46700 46200 46700 10 line
45625 46700 125 180 360 10 darc
45875 46700 125 0 180 10 darc
grestore
gsave
false false false false 260.000000 [(F1) ] 0 45500 46900 138.888885 text
grestore
46200 46700 46500 46700 10 line
46200 46300 46500 46300 10 line
46200 45900 46500 45900 10 line
45000 46300 45300 46300 10 line
44000 49200 45300 49200 10 line
45300 47300 45300 49200 10 line
45300 47300 40600 47300 10 line
gsave
true false true false 390.000000 [(THIS IS ALL STILL) (GUESS WORK.) ] 0 45500 50000 208.333328 text
grestore
gsave
false true true false 260.000000 [(N.C.) ] 0 41100 48900 138.888885 text
grestore
gsave
false false true false 260.000000 [(N.C.) ] 0 44100 48600 138.888885 text
grestore
gsave
46000 43900 46200 43900 10 line
gsave
false false true false 208.000000 [(+24V) ] 0 46255 43895 111.111115 text
grestore
46000 43300 46200 43300 10 line
gsave
false false true false 208.000000 [(V In) ] 0 46255 43295 111.111115 text
grestore
46000 42700 46200 42700 10 line
gsave
false false true false 208.000000 [(GND) ] 0 46255 42695 111.111115 text
grestore
47800 43700 100 0 360 10 darc
47800 43800 47600 43800 10 line
47800 43600 47600 43600 10 line
47600 43700 100 90 270 10 darc
47800 42900 100 0 360 10 darc
47800 43000 47600 43000 10 line
47800 42800 47600 42800 10 line
47600 42900 100 90 270 10 darc
47600 43800 47600 44100 10 line
47600 44100 46200 44100 10 line
46200 44100 46200 42500 10 line
46200 42500 47600 42500 10 line
47600 42500 47600 42800 10 line
47600 43000 47600 43600 10 line
48100 43700 47900 43700 10 line
gsave
false true true false 208.000000 [(Air In) ] 0 47445 43695 111.111115 text
grestore
48100 42900 47900 42900 10 line
gsave
false true true false 208.000000 [(Air Out) ] 0 47445 42895 111.111115 text
grestore
grestore
48100 43700 48300 43700 10 line
gsave
false false false false 260.000000 [(EPL2009_09_28-v1.sch) ] 0 50000 40400 138.888885 text
grestore
gsave
53900 42600 100 0 360 10 darc
53900 42700 53700 42700 10 line
53900 42500 53700 42500 10 line
53700 42600 100 90 270 10 darc
53900 41800 100 0 360 10 darc
53900 41900 53700 41900 10 line
53900 41700 53700 41700 10 line
53700 41800 100 90 270 10 darc
53700 42700 53700 43200 10 line
53700 43200 52100 43200 10 line
52100 43200 52100 41900 10 line
52100 41500 53700 41500 10 line
53700 41500 53700 41700 10 line
53700 41900 53700 42500 10 line
54200 42600 54000 42600 10 line
gsave
false true true false 208.000000 [(Water In) ] 0 53545 42595 111.111115 text
grestore
54200 41800 54000 41800 10 line
gsave
false true true false 208.000000 [(Water Out) ] 0 53545 41795 111.111115 text
grestore
51900 41800 100 0 360 10 darc
51900 41900 52600 41900 10 line
51900 41700 52600 41700 10 line
52600 41800 100 270 450 10 darc
51600 41800 51800 41800 10 line
gsave
false false true false 208.000000 [(Air In) ] 0 52055 41795 111.111115 text
grestore
52100 41700 52100 41500 10 line
52500 41900 52500 42900 10 line
52700 42500 52700 41800 10 line
52600 42900 100 0 180 10 darc
53700 41700 52600 41700 10 line
53700 41900 52700 41900 10 line
53700 42500 52700 42500 10 line
53700 42700 52700 42700 10 line
52700 42600 100 90 270 10 darc
52700 42900 52700 42700 10 line
grestore
gsave
48500 43700 48300 43700 10 line
48800 43700 48900 43800 10 line
48800 43700 48900 43600 10 line
48500 43700 48800 43700 10 line
grestore
gsave
false false true false 260.000000 [(Main Air I) ] 0 49000 43700 138.888885 text
grestore
47800 44600 47800 44000 10 line
47800 44000 48000 44000 10 line
gsave
55200 41800 100 0 360 10 darc
55200 41700 55400 41700 10 line
55200 41900 55400 41900 10 line
55400 41800 100 -90 90 10 darc
55200 42800 100 0 360 10 darc
55200 42700 55400 42700 10 line
55200 42900 55400 42900 10 line
55400 42800 100 -90 90 10 darc
55400 43100 55400 42900 10 line
55400 42700 55400 41900 10 line
54900 41800 55100 41800 10 line
gsave
false false true false 208.000000 [(Water In) ] 0 55555 41805 111.111115 text
grestore
54900 42800 55100 42800 10 line
gsave
false false true false 208.000000 [(Water Out) ] 0 55555 42805 111.111115 text
grestore
55400 41700 55400 41500 10 line
55400 41700 56500 41700 10 line
55400 41900 56500 41900 10 line
55400 42700 56500 42700 10 line
55400 42900 56500 42900 10 line
56500 41900 200 -90 90 10 darc
56500 42700 200 -90 90 10 darc
56500 42100 200 90 270 10 darc
56500 42300 200 -90 90 10 darc
56500 42500 200 90 270 10 darc
55400 41500 56900 41500 10 line
56900 41500 56900 43100 10 line
56900 43100 55400 43100 10 line
grestore
54300 43700 54700 43700 10 line
gsave
54900 43700 54700 43700 10 line
55200 43700 55300 43800 10 line
55200 43700 55300 43600 10 line
54900 43700 55200 43700 10 line
grestore
gsave
false false true false 260.000000 [(Chilled Water In) ] 0 55400 43700 138.888885 text
grestore
45000 46700 45300 46700 10 line
45000 45900 45300 45900 10 line
48500 42200 50500 42200 10 line
48800 41900 50800 41900 10 line
49100 41600 51100 41600 10 line
45800 43900 45800 44800 10 line
45600 42700 45600 44600 10 line
40600 45000 40600 47300 10 line
40600 45000 45400 45000 10 line
45400 43300 45400 45000 10 line
48100 42900 51300 42900 10 line
45800 43900 46000 43900 10 line
45600 42700 46000 42700 10 line
46000 43300 45400 43300 10 line
54900 41800 54200 41800 10 line
54200 42600 54300 42600 10 line
54300 42600 54300 43700 10 line
51300 42900 51300 41800 10 line
51300 41800 51600 41800 10 line
gsave
44400 42500 44100 42500 10 line
44400 42400 100 270 450 10 darc
44400 41800 100 270 450 10 darc
44400 41600 100 270 450 10 darc
44400 41500 44100 41500 10 line
44900 41500 45200 41500 10 line
44900 41600 100 90 270 10 darc
44900 41800 100 90 270 10 darc
44900 42400 100 90 270 10 darc
44900 42500 45200 42500 10 line
44600 42600 44600 41400 10 line
44700 42600 44700 41400 10 line
43900 41500 43700 41500 10 line
43900 42500 43700 42500 10 line
45600 41500 45400 41500 10 line
45600 42500 45400 42500 10 line
44400 42200 100 270 450 10 darc
44400 42000 100 270 450 10 darc
44900 42200 100 90 270 10 darc
44900 42000 100 90 270 10 darc
43900 41300 45400 41300 10 line
45400 41300 45400 42700 10 line
45400 42700 43900 42700 10 line
43900 42700 43900 41300 10 line
grestore
gsave
false false false false 260.000000 [(T1) ] 0 44000 42800 138.888885 text
grestore
45600 41500 45700 41500 10 line
45700 41500 45700 40800 10 line
54900 42800 54500 42800 10 line
54500 42800 54500 43400 10 line
54500 43400 54700 43400 10 line
gsave
54700 43400 54900 43400 10 line
54900 43400 55300 43400 10 line
55300 43400 55200 43500 10 line
55300 43400 55200 43300 10 line
grestore
gsave
false false true false 260.000000 [(Chilled Water Out) ] 0 55400 43400 138.888885 text
grestore
gsave
51000 49200 51300 49200 10 line
gsave
false true false false 208.000000 [(PH1 Out) ] 0 50945 49195 111.111115 text
grestore
gsave
false false false false 260.000000 [(1) ] 0 51095 49245 138.888885 text
grestore
51000 48900 51300 48900 10 line
gsave
false true false false 208.000000 [(PH2 Out) ] 0 50945 48895 111.111115 text
grestore
gsave
false false false false 260.000000 [(2) ] 0 51095 48945 138.888885 text
grestore
48800 49400 48500 49400 10 line
gsave
false false false false 208.000000 [(+24V) ] 0 48855 49395 111.111115 text
grestore
gsave
false true false false 260.000000 [(4) ] 0 48705 49445 138.888885 text
grestore
48800 49700 48500 49700 10 line
gsave
false false false false 208.000000 [(Analog In 1) ] 0 48855 49695 111.111115 text
grestore
gsave
false true false false 260.000000 [(3) ] 0 48705 49745 138.888885 text
grestore
48800 47800 51000 47800 10 line
51000 47800 51000 50000 10 line
51000 50000 48800 50000 10 line
48800 50000 48800 47800 10 line
gsave
true false true false 260.000000 [(Generic Symbol) ] 0 49900 47900 138.888885 text
grestore
48800 48100 48500 48100 10 line
gsave
false false false false 208.000000 [(PH3 In) ] 0 48855 48095 111.111115 text
grestore
gsave
false true false false 260.000000 [(8) ] 0 48705 48145 138.888885 text
grestore
48800 48700 48500 48700 10 line
gsave
false false false false 208.000000 [(PH1 In) ] 0 48855 48695 111.111115 text
grestore
gsave
false true false false 260.000000 [(6) ] 0 48705 48745 138.888885 text
grestore
48800 48400 48500 48400 10 line
gsave
false false false false 208.000000 [(PH2 In) ] 0 48855 48395 111.111115 text
grestore
gsave
false true false false 260.000000 [(7) ] 0 48705 48445 138.888885 text
grestore
51000 48600 51300 48600 10 line
gsave
false true false false 208.000000 [(PH3 Out) ] 0 50945 48595 111.111115 text
grestore
gsave
false false false false 260.000000 [(3) ] 0 51095 48645 138.888885 text
grestore
48800 49100 48500 49100 10 line
gsave
false false false false 208.000000 [(0V) ] 0 48855 49095 111.111115 text
grestore
gsave
false true false false 260.000000 [(5) ] 0 48705 49145 138.888885 text
grestore
grestore
gsave
true false true false 260.000000 [(SRC_CTRL1) ] 0 49900 50100 138.888885 text
grestore
40200 47700 47300 47700 10 line
47300 47700 47300 49400 10 line
47300 49400 48500 49400 10 line
46000 42300 46000 42500 10 line
46000 42500 45600 42500 10 line
46200 41300 46200 41100 10 line
gsave
43000 42500 43300 42500 10 line
gsave
false true false false 208.000000 [(AC In) ] 0 42945 42495 111.111115 text
grestore
gsave
false false false false 260.000000 [(1) ] 0 43095 42545 138.888885 text
grestore
43000 42200 43300 42200 10 line
gsave
false true false false 208.000000 [(AC In) ] 0 42945 42195 111.111115 text
grestore
gsave
false false false false 260.000000 [(2) ] 0 43095 42245 138.888885 text
grestore
43000 41600 43300 41600 10 line
gsave
false true false false 208.000000 [(Half Phase In/\\_COM\\_) ] 0 42945 41595 111.111115 text
grestore
gsave
false false false false 260.000000 [(4) ] 0 43095 41645 138.888885 text
grestore
40800 41500 43000 41500 10 line
43000 41500 43000 42700 10 line
43000 42700 40800 42700 10 line
40800 42700 40800 41500 10 line
gsave
false true false false 260.000000 [(CPB-24D-30) ] 0 43000 42800 138.888885 text
grestore
40800 42000 40500 42000 10 line
gsave
false false false false 208.000000 [(\\_COM\\_) ] 0 40855 41995 111.111115 text
grestore
gsave
false true false false 260.000000 [(6) ] 0 40705 42045 138.888885 text
grestore
43000 41900 43300 41900 10 line
gsave
false true false false 208.000000 [(Half Phase In) ] 0 42945 41895 111.111115 text
grestore
gsave
false false false false 260.000000 [(3) ] 0 43095 41945 138.888885 text
grestore
40800 42300 40500 42300 10 line
gsave
false false false false 208.000000 [(+24V) ] 0 40855 42295 111.111115 text
grestore
gsave
false true false false 260.000000 [(5) ] 0 40705 42345 138.888885 text
grestore
grestore
gsave
false false false false 260.000000 [(VREG1) ] 0 40800 42800 138.888885 text
grestore
40500 42300 40200 42300 10 line
40200 42300 40200 49900 10 line
40400 42000 40400 50500 10 line
40400 42000 40500 42000 10 line
gsave
47000 41600 47000 41300 10 line
46800 42000 46800 42300 10 line
47200 42000 47200 42300 10 line
47000 41600 46850 41960 10 line
46200 41600 46200 41300 10 line
46000 42000 46000 42300 10 line
46400 42000 46400 42300 10 line
46200 41610 46050 41960 10 line
46140 41760 46250 41760 10 line
46850 41760 46930 41760 10 line
46600 41760 46750 41760 10 line
46350 41760 46500 41760 10 line
46000 41960 50 0 360 10 darc
46400 41960 50 0 360 10 darc
46800 41960 50 0 360 10 darc
47200 41960 50 0 360 10 darc
grestore
gsave
false false false false 260.000000 [(S2) ] 0 47310 41700 138.888885 text
grestore
43700 42500 43300 42500 10 line
43300 42200 43500 42200 10 line
43700 41500 43500 41500 10 line
43500 41500 43500 42200 10 line
newpath
40400 49600
25
0 360 arc
fill
newpath
40400 49600
25
0 360 arc
fill
newpath
40400 47500
25
0 360 arc
fill
newpath
40400 47500
25
0 360 arc
fill
newpath
48200 46300
25
0 360 arc
fill
newpath
48000 45700
25
0 360 arc
fill
newpath
48200 46300
25
0 360 arc
fill
newpath
48200 46300
25
0 360 arc
fill
newpath
48000 45700
25
0 360 arc
fill
newpath
48000 45700
25
0 360 arc
fill
newpath
40400 44600
25
0 360 arc
fill
newpath
45600 44600
25
0 360 arc
fill
newpath
40400 44600
25
0 360 arc
fill
newpath
40400 48300
25
0 360 arc
fill
newpath
40400 48300
25
0 360 arc
fill
newpath
40200 44800
25
0 360 arc
fill
newpath
45800 44800
25
0 360 arc
fill
newpath
40200 44800
25
0 360 arc
fill
newpath
46200 41100
25
0 360 arc
fill
newpath
45700 40800
25
0 360 arc
fill
newpath
45800 44800
25
0 360 arc
fill
newpath
45800 44800
25
0 360 arc
fill
newpath
45600 44600
25
0 360 arc
fill
newpath
45600 44600
25
0 360 arc
fill
newpath
45700 40800
25
0 360 arc
fill
newpath
45700 40800
25
0 360 arc
fill
newpath
40200 47700
25
0 360 arc
fill
newpath
40200 47700
25
0 360 arc
fill
newpath
46200 41100
25
0 360 arc
fill
newpath
46200 41100
25
0 360 arc
fill
newpath
40200 44800
25
0 360 arc
fill
newpath
40200 47700
25
0 360 arc
fill
newpath
40400 44600
25
0 360 arc
fill
newpath
40400 49600
25
0 360 arc
fill
newpath
40400 47500
25
0 360 arc
fill
newpath
40400 48300
25
0 360 arc
fill
showpage
%%End
