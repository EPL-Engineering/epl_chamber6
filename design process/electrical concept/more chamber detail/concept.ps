%!PS-Adobe-3.0
%%Creator: gEDA gschem 1.6.1-20100214-22-ga30f00b
%%CreationDate: Fri Sep  7 13:47:49 2012
%%Title: /home/fosse/Documents/work/chamber 6a/design process/electrical concept/more chamber detail/concept.sch
%%Author: (null)
%%BoundingBox: 0 0 612 792
%%Orientation: Landscape
%%Pages: 1
%%Endcomments
%%BeginProlog
% Prolog for gEDA, define all the functions needed for rendering
% schematics on Postscript devices


% Draw a line from the second coordinate to the first
% x2 y2 x1 y1 width line -
/line {
    setlinewidth
    % pop off first element and moveto
    moveto
    % pop off remaining elements and draw a line segment
    lineto
    % draw it
    stroke
} bind def


% Draw a dot
% x y r dot -
/dot {
    0 360 arc fill
} bind def

% Draw a dot-dashed line, a bunch of lined segments,
% if the array element only has length two, draw a dot.
% [ [x2 y2 x1 y1] [x4 y4 x3 y3] [x5 y5] ... ] width dashed -
/width 0 def
/dashed {
    dup 2.0 div /width exch def
    setlinewidth
    % pop off each line segment and draw it as a dot or as a line
    {
	aload length 2 gt
	{ moveto lineto stroke}
	{ width dot } ifelse
    } forall
} bind def

% Draw an arc segment
% x y r ang1 ang2 width darc -
/darc {
    setlinewidth
    arc stroke
} bind def

% Draw a series of arc segment bits, if the array element only has a single
% element in it, draw a dot.
% [ [sa1 ea1] [sa2 ea2] ... ] x y r width dashedarc -
/x 0 def
/y 0 def
/dashedarc {
    dup /width exch def
    setlinewidth
    /r exch def  
    /y exch def
    /x exch def
    { aload length 1 gt
	{
	    % this element had two angles in it
	    % extract start and stop angles
	    x y r   % drop x y and r onto stack
		    % at this point we have: sa ea x y r
		    % we need                      x y r sa ea
		    % so..
	    5 -2 roll
	    % and add it to the current path, and draw it
	    arc stroke
	} {
	    % this element only had one angle in it, place a
	    % filled dot at the appropriate place
	    % compute center point of the arc using the angle
	    % that is on the top of the stack
	    dup   		% angle angle
	    cos r mul x add 	% angle x
	    exch		% x angle
	    sin r mul y add	% x y
	    width		% x y width/2
	    dot			% draw the dot
	} ifelse
    } forall

    % Now draw it
    stroke
} bind def

% Draw a box
% width height x y linethickness box -
/box {
    setlinewidth
    moveto
    exch dup 0 rlineto	 % w h, h w w 0      -- Draw bottom line
    exch 0 exch rlineto	 % h w, w h 0, w 0 h -- Draw right line 
    neg 0 rlineto	 % w, -w 0           -- Draw Top line
    closepath		 % finish and draw it
    stroke
} bind def			     

% Draw a filled box
% width height x y fbox -
/fbox {
    moveto
    exch dup 0 rlineto	
    exch 0 exch rlineto	
    neg 0 rlineto		
    closepath			
    fill			
} bind def

% Font reincoding utilities

% ISOLatin1Encoding, extended with remaining uncoded glyphs
/ISOLatin1Extended [
    /.notdef /Lslash /lslash /OE /oe /Scaron /scaron /Zcaron /zcaron
    /Ydieresis /trademark /bullet /dagger /daggerdbl /ellipsis /emdash
    /endash /fi /fl /florin /fraction /guilsinglleft /guilsinglright
    /perthousand /quotedblbase /quotedblleft /quotedblright
    /quotesinglbase /quotesingle /.notdef /.notdef /.notdef /space
    /exclam /quotedbl /numbersign /dollar /percent /ampersand
    /quoteright /parenleft /parenright /asterisk /plus /comma /minus
    /period /slash /zero /one /two /three /four /five /six /seven /eight
    /nine /colon /semicolon /less /equal /greater /question /at /A /B /C
    /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z
    /bracketleft /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s
    /t /u /v /w /x /y /z /braceleft /bar /braceright /asciitilde
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /dotlessi /grave /acute /circumflex
    /tilde /macron /breve /dotaccent /dieresis /.notdef /ring /cedilla
    /.notdef /hungarumlaut /ogonek /caron /space /exclamdown /cent
    /sterling /currency /yen /brokenbar /section /dieresis /copyright
    /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
    /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown /Agrave /Aacute
    /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute
    /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth
    /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
    /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
    /ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave
    /iacute /icircumflex /idieresis /eth /ntilde /ograve /oacute
    /ocircumflex /otilde /odieresis /divide /oslash /ugrave /uacute
    /ucircumflex /udieresis /yacute /thorn /ydieresis
] def

% `new-font-name' `encoding-vector' `old-font-name' RE -
/RE {
    findfont
    dup maxlength dict begin {
        1 index /FID ne { def } { pop pop } ifelse
    } forall
    /Encoding exch def
    dup /FontName exch def
    currentdict end definefont pop
} bind def

% Text handling functions, select the font and scale it, then we need
% only to apply the appropriate transformations to get the text
% justified into the right spots.  The bad thing here is that we don't
% do any kerning, so the output may look a bit strange.

% compute the height of one character and return lly and ury
% (char) charheight lly ury
/charheight {
    gsave			% push graphics state
	newpath			% clear current path
	0 0 moveto		% Set current point
	false charpath		% get path
	flattenpath		% flatten path
	pathbbox		% stack = llx lly urx ury
	exch pop		% stack = llx lly ury
	3 -1 roll pop		% stack = lly ury
    grestore			% pop graphics state
} bind def

% compute the height of a string, one character at a time
% (string) stringheight lly ury
/lly 0.0 def
/ury 0.0 def

/stringheight {
    /lly 0.0 def			% initial value of heightmin
    /ury 0.0 def			% initial value of heightmax
    {				% work through string
	( ) dup 0 4 -1 roll put	% create one character string
	charheight		% measure it's height
	dup ury gt {		% if ury gt heightmax
	    /ury exch def	% update with new value
	} {
	    pop			% else discard ury
	} ifelse
	dup lly lt {		% if lly lt heightmin
	    /lly exch def	% update with new value
	} {
	    pop			% else discard lly
	} ifelse
    } forall
    lly ury			% Return the results
} bind def

% calculate the string width taking into account the escapes.
/mystrx 0.0 def
/mystry 0.0 def
/mystresc false def

/mystringwidth {
    /mystrx 0.0 def
    /mystry 0.0 def
    /mystresc false def
    {				% work through string
	% did we process the escape character last?
	mystresc {
	    % last character was escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
		% toggle drawing overbars
		0.0 0.0 % make it like it never happened...
	    } {
		% otherwise measure the character 
		(\\ ) dup 1 4 -1 roll put % count a \ and the character
		stringwidth
	    } ifelse
	    % and reset the flag
	    /mystresc false def
	} {
	    % last character was not escape
	    % is this escape
	    dup 92 eq {
		% yes, escape character, set flag
		/mystresc true def
		pop % drop character
		0.0 0.0 % make like this character has no width and height
	    } {
		( ) dup 0 4 -1 roll put	% create one character string
		stringwidth		% measure it's height/width
	    } ifelse
	} ifelse
	% accumulate x and y movements
	mystry add /mystry exch def
	mystrx add /mystrx exch def
    } forall
    mystrx mystry % drop results on stack
} bind def

% Render a string with overbars
%
/escaped false def
/drawoverbar false def
/fontsize 0.0 def

%string1 string2 append -
/append {
    2 copy length exch length add % find new length
    string dup % string1 string2 string string
    4 2 roll % string string string1 string2
    2 index 0 3 index
    % string string string1 string2 string 0 string1
    putinterval % string string string1 string2
    exch length exch putinterval
} bind def

% If drawoverbar is set, draw a line of the same length as the given string
% string overbarshowline -
/overbarshowline {
    % print overbar if necessary
    stringwidth pop 0
    drawoverbar {
        rlineto
        gsave stroke grestore
    } {
        rmoveto
    } ifelse
} bind def

% Draws overbars for the given string, then shows the string itself
% string overbarshow
/overbarshow {
    /overbarshowacc () def
    /overbarshowtxt () def

    gsave
    fontsize 10.0 div setlinewidth
    0 fontsize rmoveto  % move to (0,overbarheight)

    {				% work through string
	escaped {
	    % the last character was the escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
                overbarshowacc overbarshowline
                % toggle drawing overbars
		/drawoverbar drawoverbar not def

                % Append the contents off the accumulator to the text
                % string we're eventually going to show
                /overbarshowtxt overbarshowtxt overbarshowacc append def

                % clear accumulator
                /overbarshowacc () def
	    } {
                % add to accumulator
                (\\ ) dup 1 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	    % and reset the flag
	    /escaped false def
	} {
	    % check for escape character \ = 92
	    dup 92 eq {
		% yes, escape character, set flag
		/escaped true def
		pop % drop character
	    } {
                % add to accumulator
                ( ) dup 0 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	} ifelse
    } forall
    % Catch any leftovers
    overbarshowacc overbarshowline
    overbarshowtxt overbarshowacc append

    grestore
    show
} bind def

% 
% hcenter rjustify vcenter vjustify spacing [(line1) (line2) ... ] rot x y size text -
/stringw 0.0 def
/stringh 0.0 def
/spacing 0.0 def
/strings [ ] def
/stringtxt ( ) def
/stringcount 0 def
/rot 0.0 def

/text {
    gsave	        % save state for later
    /drawoverbar false def      % start by not drawing overbars

    dup /fontsize exch def  % save font size for corrections later
    % do font selection 
    /gEDAFont findfont
    exch scalefont
    setfont

    % set up coordinates
    translate           % move origin to given point
    rotate		% rotate so that text is drawn
    0 0 moveto
    dup length /stringcount exch def			% Get number of strings
    /strings exch def     				% save strings
    /spacing exch def
    % do we have more than 1 string to render?
    stringcount 1 eq {
	/stringtxt strings aload pop def		% get the string 
	/stringw stringtxt mystringwidth pop neg def	% get the -width
	/stringh stringtxt stringheight exch pop neg def% get the -height

	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh rmoveto } if 
	% vertical center
	{ 0 stringh 0.3571425 mul rmoveto } if  % not 0.5, so that
						% it looks nicer
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% Draw the text
	stringtxt overbarshow
    } {
	% More than one line, compute bounding box for the text

	% vertical height, don't use the actual hieght of the characters
	% assume that the user wants to make the baselines line up with two
	% text boxes placed side by side
	/stringh stringcount spacing mul neg def
	% Now figure out horizontal size, this amounts to keeping track
	% of the longest string
	/stringw 0.0 def
	strings {
	    mystringwidth pop
	    dup stringw gt {
		/stringw exch def
	    } {
		pop
	    } ifelse
	} forall
	/stringw stringw neg def 	% get the -width
	
	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh fontsize add rmoveto } if 
	% vertical center
	{ 0 stringh 0.5 mul rmoveto } if 
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% now move up to the first line and begin rendering
	0 stringcount 1 sub spacing mul rmoveto
	strings {
	    gsave		% Save starting point
	    overbarshow		% render the text
	    grestore
	    0 spacing neg rmoveto
	} forall
    } ifelse
    grestore 	% Restore old state
} bind def


%%EndProlog
%%Page: 1 1
/gEDAFont ISOLatin1Extended /Helvetica RE
2 setlinecap
0.072000 0.072000 scale
8113 500 translate 90 rotate
0.454545 0.454545 scale
-40000 -40000 translate
gsave
40000 40000 62000 40000 10 line
62000 40000 62000 57000 10 line
62000 57000 40000 57000 10 line
40000 57000 40000 40000 10 line
57900 40600 57900 40000 10 line
gsave
false false false false 208.000000 [(FILE:) ] 0 54500 40400 144.444443 text
grestore
gsave
false false false false 208.000000 [(REVISION:) ] 0 58000 40400 144.444443 text
grestore
gsave
false false false false 208.000000 [(DRAWN BY: ) ] 0 58000 40100 144.444443 text
grestore
gsave
false false false false 208.000000 [(PAGE) ] 0 54500 40100 144.444443 text
grestore
gsave
false false false false 208.000000 [(OF) ] 0 56200 40100 144.444443 text
grestore
gsave
false false false false 208.000000 [(TITLE) ] 0 54500 40700 144.444443 text
grestore
54400 40000 62000 40000 10 line
62000 40000 62000 41400 10 line
62000 41400 54400 41400 10 line
54400 41400 54400 40000 10 line
54400 40600 62000 40600 10 line
grestore
42800 48000 43000 48000 10 line
43000 44500 44000 44500 10 line
43200 43500 43200 48000 10 line
43200 43500 44000 43500 10 line
gsave
52600 48200 52900 48200 10 line
52200 48400 51900 48400 10 line
52200 48000 51900 48000 10 line
52600 48200 52240 48350 10 line
52600 49000 52900 49000 10 line
52200 49200 51900 49200 10 line
52200 48800 51900 48800 10 line
52590 49000 52240 49150 10 line
52440 49060 52440 48950 10 line
52440 48350 52440 48270 10 line
52440 48600 52440 48450 10 line
52440 48850 52440 48700 10 line
52240 49200 50 0 360 10 darc
52240 48800 50 0 360 10 darc
52240 48400 50 0 360 10 darc
52240 48000 50 0 360 10 darc
grestore
gsave
true false false false 260.000000 [(S1) ] 0 52410 49700 180.555557 text
grestore
gsave
true false false false 260.000000 [(Chamber Power) ] 0 52400 49500 180.555557 text
grestore
gsave
true false false false 260.000000 [(NOTE#4) ] 0 52400 49300 180.555557 text
grestore
49500 49000 51000 49000 10 line
51000 48800 51900 48800 10 line
49500 48000 51900 48000 10 line
49500 44500 54700 44500 10 line
gsave
false true false false 260.000000 [(HOTB) ] 0 54700 44600 180.555557 text
grestore
49500 43500 54700 43500 10 line
gsave
false true false false 260.000000 [(NEUTRALB) ] 0 54700 43600 180.555557 text
grestore
gsave
51300 45900 51300 45700 10 line
51150 45700 51450 45700 10 line
51450 45700 51400 45600 10 line
51300 45700 51250 45600 10 line
51150 45700 51100 45600 10 line
grestore
gsave
false false false false 260.000000 [(CHAMBER_GROUND) ] 0 51500 45800 180.555557 text
grestore
52900 49000 53500 49000 10 line
gsave
false true false false 260.000000 [(HOTA) ] 0 53400 49100 180.555557 text
grestore
52900 48200 54000 48200 10 line
gsave
false true false false 260.000000 [(NEUTRALA) ] 0 53900 48300 180.555557 text
grestore
56500 47500 56500 55200 10 line
59700 50300 60000 50000 10 line
60000 50000 60000 49200 10 line
60000 49200 59700 48900 10 line
53600 44000 54700 44000 10 line
gsave
false true false false 260.000000 [(GROUNDB) ] 0 54700 44100 180.555557 text
grestore
gsave
50300 45000 50300 45200 10 line
50200 45000 50400 45000 10 line
50255 44950 50345 44950 10 line
50280 44910 50320 44910 10 line
grestore
gsave
false false false false 260.000000 [(DROP1) ] 0 50500 45100 180.555557 text
grestore
gsave
false false false false 260.000000 [(To building steel) ] 0 50500 44900 180.555557 text
grestore
50300 45200 50300 46200 10 line
gsave
45700 46500 45700 46700 10 line
45600 46500 45800 46500 10 line
45655 46450 45745 46450 10 line
45680 46410 45720 46410 10 line
grestore
gsave
false false false false 260.000000 [(DROP2) ] 0 45900 46600 180.555557 text
grestore
gsave
false false false false 260.000000 [(To building steel) ] 0 45900 46400 180.555557 text
grestore
45700 46700 45700 48000 10 line
gsave
45900 42500 45900 42700 10 line
45800 42500 46000 42500 10 line
45855 42450 45945 42450 10 line
45880 42410 45920 42410 10 line
grestore
gsave
false false false false 260.000000 [(DROP3) ] 0 46100 42600 180.555557 text
grestore
gsave
false false false false 260.000000 [(To building steel) ] 0 46100 42400 180.555557 text
grestore
45900 42700 45900 43500 10 line
54900 44700 55200 44400 10 line
55200 44400 55200 43600 10 line
55200 43600 54900 43300 10 line
51900 49200 51500 49200 10 line
51500 46800 51500 49200 10 line
51500 48400 51900 48400 10 line
44700 47000 51100 47000 10 line
44700 47000 44700 47700 10 line
45000 42200 45000 43200 10 line
41400 48300 41100 48000 10 line
41100 48000 41100 46400 10 line
41100 46400 41400 46100 10 line
50000 49600 50000 49500 10 line
50000 49300 50000 49200 10 line
50000 49000 50000 48900 10 line
50000 48700 50000 48600 10 line
50000 48400 50000 48300 10 line
50000 48100 50000 48000 10 line
50000 47800 50000 47700 10 line
50000 47500 50000 47400 10 line
50000 47200 50000 47100 10 line
50300 45500 50400 45500 10 line
50600 45500 50700 45500 10 line
50900 45500 51000 45500 10 line
51200 45500 51300 45500 10 line
51500 45500 51600 45500 10 line
51800 45500 51900 45500 10 line
52100 45500 52200 45500 10 line
52400 45500 52500 45500 10 line
52700 45500 52800 45500 10 line
53000 45500 53100 45500 10 line
61400 45500 61500 45500 10 line
61500 46700 61500 46800 10 line
61500 47000 61500 47100 10 line
61500 47300 61500 47400 10 line
61500 47600 61500 47700 10 line
61500 47900 61500 48000 10 line
61500 48200 61500 48300 10 line
61500 48500 61500 48600 10 line
61500 48800 61500 48900 10 line
61500 49100 61500 49200 10 line
61500 49400 61500 49500 10 line
53300 45500 53400 45500 10 line
53600 45500 53700 45500 10 line
53900 45500 54000 45500 10 line
54200 45500 54300 45500 10 line
54500 45500 54600 45500 10 line
54800 45500 54900 45500 10 line
55100 45500 55200 45500 10 line
55400 45500 55500 45500 10 line
55700 45500 55800 45500 10 line
56000 45500 56100 45500 10 line
56300 45500 56400 45500 10 line
51000 48800 51000 49000 10 line
50000 55000 50000 54900 10 line
50000 54700 50000 54600 10 line
50000 54400 50000 54300 10 line
50000 55300 50000 55200 10 line
61500 54600 61500 54500 10 line
61500 54300 61500 54200 10 line
61500 54900 61500 54800 10 line
61500 55200 61500 55100 10 line
43700 48000 43200 48000 10 line
42800 46400 43000 46400 10 line
43000 46400 43000 44500 10 line
gsave
42100 46400 41800 46400 10 line
42500 46400 42800 46400 10 line
42100 46400 42460 46550 10 line
42100 47200 41800 47200 10 line
42500 47200 42800 47200 10 line
42110 47200 42460 47350 10 line
42260 47260 42260 47150 10 line
42260 46550 42260 46470 10 line
42260 46800 42260 46650 10 line
42260 47050 42260 46900 10 line
42460 47200 50 0 360 10 darc
42460 46400 50 0 360 10 darc
42100 48000 41800 48000 10 line
42500 48000 42800 48000 10 line
42110 48000 42460 48150 10 line
42260 48060 42260 47950 10 line
42260 47850 42260 47700 10 line
42460 48000 50 0 360 10 darc
42260 47550 42260 47400 10 line
grestore
gsave
true false false false 260.000000 [(S2) ] 0 42310 48600 180.555557 text
grestore
gsave
true false false false 260.000000 [(NOTE#3) ] 0 42300 48200 180.555557 text
grestore
gsave
true false false false 260.000000 [(Main Power) ] 0 42300 48400 180.555557 text
grestore
42800 47200 43200 47200 10 line
41500 48000 41800 48000 10 line
41500 47200 41800 47200 10 line
41800 46400 41500 46400 10 line
gsave
44200 49000 43900 49000 10 line
44200 48900 100 270 450 10 darc
44200 48300 100 270 450 10 darc
44200 48100 100 270 450 10 darc
44200 48000 43900 48000 10 line
44900 48000 45200 48000 10 line
44900 48100 100 90 270 10 darc
44900 48300 100 90 270 10 darc
44900 48900 100 90 270 10 darc
44900 49000 45200 49000 10 line
44500 49100 44500 47900 10 line
44600 49100 44600 47900 10 line
43900 48000 43700 48000 10 line
43900 49000 43700 49000 10 line
45400 48000 45200 48000 10 line
45400 49000 45200 49000 10 line
44200 48700 100 270 450 10 darc
44200 48500 100 270 450 10 darc
44900 48700 100 90 270 10 darc
44900 48500 100 90 270 10 darc
44400 49000 44400 48900 10 line
44400 48800 44400 48700 10 line
44400 48600 44400 48500 10 line
44400 48400 44400 48300 10 line
44400 48200 44400 48100 10 line
44400 48000 44400 47900 10 line
44400 47700 44400 47900 10 line
44700 49000 44700 48900 10 line
44700 48800 44700 48700 10 line
44700 48600 44700 48500 10 line
44700 48400 44700 48300 10 line
44700 48200 44700 48100 10 line
44700 48000 44700 47900 10 line
44700 47700 44700 47900 10 line
44500 47700 44500 47900 10 line
44600 47700 44600 47900 10 line
grestore
gsave
true false false false 260.000000 [(T1) ] 0 44500 49400 180.555557 text
grestore
gsave
true false false false 260.000000 [(TOPAZ Ultra Isolation 0.0005pF) ] 0 44500 49200 180.555557 text
grestore
gsave
false true true false 260.000000 [(480V) ] 0 44100 48500 180.555557 text
grestore
gsave
false false true false 260.000000 [(120V) ] 0 45000 48500 180.555557 text
grestore
gsave
44500 44500 44200 44500 10 line
44500 44400 100 270 450 10 darc
44500 43800 100 270 450 10 darc
44500 43600 100 270 450 10 darc
44500 43500 44200 43500 10 line
45200 43500 45500 43500 10 line
45200 43600 100 90 270 10 darc
45200 43800 100 90 270 10 darc
45200 44400 100 90 270 10 darc
45200 44500 45500 44500 10 line
44800 44600 44800 43400 10 line
44900 44600 44900 43400 10 line
44200 43500 44000 43500 10 line
44200 44500 44000 44500 10 line
45700 43500 45500 43500 10 line
45700 44500 45500 44500 10 line
44500 44200 100 270 450 10 darc
44500 44000 100 270 450 10 darc
45200 44200 100 90 270 10 darc
45200 44000 100 90 270 10 darc
44700 44500 44700 44400 10 line
44700 44300 44700 44200 10 line
44700 44100 44700 44000 10 line
44700 43900 44700 43800 10 line
44700 43700 44700 43600 10 line
44700 43500 44700 43400 10 line
44700 43200 44700 43400 10 line
45000 44500 45000 44400 10 line
45000 44300 45000 44200 10 line
45000 44100 45000 44000 10 line
45000 43900 45000 43800 10 line
45000 43700 45000 43600 10 line
45000 43500 45000 43400 10 line
45000 43200 45000 43400 10 line
44800 43200 44800 43400 10 line
44900 43200 44900 43400 10 line
grestore
gsave
true false false false 260.000000 [(T2) ] 0 44800 44900 180.555557 text
grestore
gsave
true false false false 260.000000 [(TOPAZ Ultra Isolation 0.0005pF) ] 0 44800 44700 180.555557 text
grestore
gsave
false true true false 260.000000 [(480V) ] 0 44400 44000 180.555557 text
grestore
gsave
false false true false 260.000000 [(120V) ] 0 45300 44000 180.555557 text
grestore
44400 46500 44400 47700 10 line
43400 46500 44600 46500 10 line
43400 42700 43400 46500 10 line
43400 43000 44900 43000 10 line
44700 43200 44700 43000 10 line
gsave
43400 42500 43400 42700 10 line
43300 42500 43500 42500 10 line
43355 42450 43445 42450 10 line
43380 42410 43420 42410 10 line
grestore
gsave
false false false false 260.000000 [(DROP4) ] 0 43600 42600 180.555557 text
grestore
gsave
false false false false 260.000000 [(To building steel) ] 0 43600 42400 180.555557 text
grestore
44500 47700 44500 46500 10 line
44800 43200 44800 43000 10 line
44600 47700 44600 46500 10 line
44900 43200 44900 43000 10 line
45000 42200 49700 42200 10 line
49700 42200 49700 46800 10 line
49700 46800 50800 46800 10 line
51500 47500 56500 47500 10 line
gsave
false false false false 260.000000 [(GROUNDA) ] 0 55000 47600 180.555557 text
grestore
53600 44000 53600 46800 10 line
53600 46800 51800 46800 10 line
51100 47000 51100 46800 10 line
51300 45900 51300 46200 10 line
51300 46200 50300 46200 10 line
50800 46800 51300 46200 10 line
51500 46800 51300 46200 10 line
51800 46800 51300 46200 10 line
51100 46800 51300 46200 10 line
43000 48000 43000 49000 10 line
43000 49000 43700 49000 10 line
61500 45800 61500 45900 10 line
61500 46100 61500 46200 10 line
61500 46400 61500 46500 10 line
61500 45500 61500 45600 10 line
50000 46900 50000 46800 10 line
50000 46600 50000 46500 10 line
50000 46300 50000 46200 10 line
50000 46000 50000 45900 10 line
50000 45700 50000 45500 10 line
50000 45500 50100 45500 10 line
gsave
46500 48000 46800 48000 10 line
gsave
false false false false 260.000000 [(Neutral In) ] 0 46855 47995 180.555557 text
grestore
46500 49000 46800 49000 10 line
gsave
false false false false 260.000000 [(Hot In) ] 0 46855 48995 180.555557 text
grestore
46800 47500 49200 47500 10 line
49200 47500 49200 49500 10 line
49200 49500 46800 49500 10 line
46800 49500 46800 47500 10 line
48000 47200 48000 47500 10 line
gsave
false false true false 260.000000 [(Chassis) ] 90 48000 47555 180.555557 text
grestore
49500 48000 49200 48000 10 line
gsave
false true false false 260.000000 [(Neutral Out) ] 0 49145 47995 180.555557 text
grestore
49500 49000 49200 49000 10 line
gsave
false true false false 260.000000 [(Hot Out) ] 0 49145 48995 180.555557 text
grestore
grestore
gsave
true false false false 260.000000 [(MOD1) ] 0 47995 49795 180.555557 text
grestore
gsave
true false false false 260.000000 [(1 Phase Surge Suppressor) ] 0 47995 49595 180.555557 text
grestore
45400 48000 46500 48000 10 line
45400 49000 46500 49000 10 line
48000 47200 48000 47000 10 line
45700 43500 46500 43500 10 line
gsave
46500 43500 46800 43500 10 line
gsave
false false false false 260.000000 [(Neutral In) ] 0 46855 43495 180.555557 text
grestore
46500 44500 46800 44500 10 line
gsave
false false false false 260.000000 [(Hot In) ] 0 46855 44495 180.555557 text
grestore
46800 43000 49200 43000 10 line
49200 43000 49200 45000 10 line
49200 45000 46800 45000 10 line
46800 45000 46800 43000 10 line
48000 42700 48000 43000 10 line
gsave
false false true false 260.000000 [(Chassis) ] 90 48000 43055 180.555557 text
grestore
49500 43500 49200 43500 10 line
gsave
false true false false 260.000000 [(Neutral Out) ] 0 49145 43495 180.555557 text
grestore
49500 44500 49200 44500 10 line
gsave
false true false false 260.000000 [(Hot Out) ] 0 49145 44495 180.555557 text
grestore
grestore
gsave
true false false false 260.000000 [(MOD1) ] 0 47995 45295 180.555557 text
grestore
gsave
true false false false 260.000000 [(1 Phase Surge Suppressor) ] 0 47995 45095 180.555557 text
grestore
45700 44500 46500 44500 10 line
48000 42200 48000 42700 10 line
41100 47200 40700 47200 10 line
40700 47200 40700 46200 10 line
gsave
false false false false 208.000000 [(Chamber 6A Electrical Concept) ] 0 55000 40700 144.444443 text
grestore
gsave
false false false false 208.000000 [(EEF & IJS) ] 0 58900 40100 144.444443 text
grestore
gsave
false false false false 208.000000 [(2012.08.07) ] 0 58800 40400 144.444443 text
grestore
gsave
false false false false 208.000000 [(Concept.sch) ] 0 54900 40400 144.444443 text
grestore
gsave
false false false false 208.000000 [(1) ] 0 56500 40100 144.444443 text
grestore
gsave
false false false false 208.000000 [(1) ] 0 55000 40100 144.444443 text
grestore
gsave
false false true false 260.000000 [("A Power") (To Chamber) (Lights) (\(Outside\)) ] 0 60200 49600 180.555557 text
grestore
gsave
false false true false 260.000000 [("B Power") (To Ctrl. Room) ] 0 55400 44000 180.555557 text
grestore
gsave
false true true false 260.000000 [(M-Floor) (Motor Generator ) (Distribution Panel) (Chamber 6 Breaker) (3 Phase 480V) ] 0 42000 45600 180.555557 text
grestore
gsave
true false false false 260.000000 [(On/In Booth) ] 0 58000 45600 180.555557 text
grestore
gsave
false false false false 260.000000 [(1. The CHAMBER_GROUND is the ground point for the booth which is a grounding block located ) (at the penetration where we run wire into the booth.) ] 0 41000 55600 180.555557 text
grestore
gsave
false false false false 260.000000 [(2. Each connection labeled DROPx goes to a distinct point on building steel on the same beam. ) (Ideally they would all use the same clamp if possible.) ] 0 41000 55200 180.555557 text
grestore
gsave
false false false false 260.000000 [(NOTES:) ] 0 41000 56000 180.555557 text
grestore
gsave
false false false false 260.000000 [(3. S2 is actually the contactor. How that is wired is a minor separate issue to be visited later.) ] 0 41000 55000 180.555557 text
grestore
gsave
false false false false 260.000000 [(4. S1 is on the booth and when off connects booth power to ground to reduce noise.) ] 0 41000 54800 180.555557 text
grestore
61500 51200 61500 51300 10 line
61500 51500 61500 51600 10 line
61500 51800 61500 51900 10 line
61500 52100 61500 52200 10 line
61500 52400 61500 52500 10 line
61500 52700 61500 52800 10 line
61500 53000 61500 53100 10 line
61500 53300 61500 53400 10 line
61500 53600 61500 53700 10 line
61500 53900 61500 54000 10 line
61500 50600 61500 50700 10 line
61500 50900 61500 51000 10 line
61500 50300 61500 50400 10 line
61500 49700 61500 49800 10 line
61500 50000 61500 50100 10 line
56600 45500 56700 45500 10 line
56900 45500 57000 45500 10 line
57200 45500 57300 45500 10 line
57500 45500 57600 45500 10 line
57800 45500 57900 45500 10 line
58100 45500 58200 45500 10 line
58400 45500 58500 45500 10 line
58700 45500 58800 45500 10 line
59000 45500 59100 45500 10 line
59300 45500 59400 45500 10 line
59600 45500 59700 45500 10 line
59900 45500 60000 45500 10 line
60200 45500 60300 45500 10 line
60500 45500 60600 45500 10 line
60800 45500 60900 45500 10 line
61100 45500 61200 45500 10 line
50000 51600 50000 51700 10 line
50000 51900 50000 52000 10 line
50000 52200 50000 52300 10 line
50000 52500 50000 52600 10 line
50000 52800 50000 52900 10 line
50000 53100 50000 53200 10 line
50000 53400 50000 53500 10 line
50000 53700 50000 53800 10 line
50000 54000 50000 54100 10 line
50000 51300 50000 51400 10 line
50000 50700 50000 50800 10 line
50000 51000 50000 51100 10 line
50000 50400 50000 50500 10 line
50000 50100 50000 50200 10 line
50000 49800 50000 49900 10 line
54500 55600 53500 55600 10 line
53500 55600 53500 49000 10 line
54500 55100 54000 55100 10 line
54000 55100 54000 48200 10 line
55800 54800 59500 54800 10 line
gsave
false true false false 260.000000 [(NEUTRALA) ] 0 59500 54900 180.555557 text
grestore
55500 55600 59500 55600 10 line
gsave
false true false false 260.000000 [(HOTA) ] 0 59500 55700 180.555557 text
grestore
54500 53800 53500 53800 10 line
54500 53300 54000 53300 10 line
56000 53000 59500 53000 10 line
gsave
false true false false 260.000000 [(NEUTRALA) ] 0 59500 53100 180.555557 text
grestore
55500 53800 59500 53800 10 line
gsave
false true false false 260.000000 [(HOTA) ] 0 59500 53900 180.555557 text
grestore
50000 56500 50100 56500 10 line
50600 56500 50700 56500 10 line
50900 56500 51000 56500 10 line
51200 56500 51300 56500 10 line
51500 56500 51600 56500 10 line
51800 56500 51900 56500 10 line
52100 56500 52200 56500 10 line
52400 56500 52500 56500 10 line
52700 56500 52800 56500 10 line
53000 56500 53100 56500 10 line
61400 56500 61500 56500 10 line
61500 56300 61500 56500 10 line
53300 56500 53400 56500 10 line
53600 56500 53700 56500 10 line
53900 56500 54000 56500 10 line
54200 56500 54300 56500 10 line
54500 56500 54600 56500 10 line
54800 56500 54900 56500 10 line
55100 56500 55200 56500 10 line
55400 56500 55500 56500 10 line
55700 56500 55800 56500 10 line
56000 56500 56100 56500 10 line
56300 56500 56400 56500 10 line
50300 56500 50400 56500 10 line
56600 56500 56700 56500 10 line
56900 56500 57000 56500 10 line
57200 56500 57300 56500 10 line
57500 56500 57600 56500 10 line
57800 56500 57900 56500 10 line
58100 56500 58200 56500 10 line
58400 56500 58500 56500 10 line
58700 56500 58800 56500 10 line
59000 56500 59100 56500 10 line
59300 56500 59400 56500 10 line
59600 56500 59700 56500 10 line
59900 56500 60000 56500 10 line
60200 56500 60300 56500 10 line
60500 56500 60600 56500 10 line
60800 56500 60900 56500 10 line
61100 56500 61200 56500 10 line
50000 55900 50000 55800 10 line
50000 55600 50000 55500 10 line
50000 56200 50000 56100 10 line
50000 56500 50000 56400 10 line
61500 55500 61500 55400 10 line
61500 55800 61500 55700 10 line
61500 56100 61500 56000 10 line
59700 55900 60000 55600 10 line
60000 55600 60000 54800 10 line
60000 54800 59700 54500 10 line
gsave
false false true false 260.000000 [("A Power") (To Chamber) (Outlets) (\(Outside\)) ] 0 60200 55200 180.555557 text
grestore
59700 54100 60000 53800 10 line
60000 53800 60000 53000 10 line
60000 53000 59700 52700 10 line
gsave
false false true false 260.000000 [("A Power") (To Chamber) (Outlets) (\(Inside\)) ] 0 60200 53400 180.555557 text
grestore
54500 50000 53500 50000 10 line
54500 49500 54000 49500 10 line
56200 49200 59500 49200 10 line
gsave
false true false false 260.000000 [(NEUTRALA) ] 0 59500 49300 180.555557 text
grestore
55500 50000 57000 50000 10 line
58000 50000 59500 50000 10 line
gsave
false true false false 260.000000 [(HOTA) ] 0 59500 50100 180.555557 text
grestore
56500 49600 59500 49600 10 line
gsave
false true false false 260.000000 [(GROUNDA) ] 0 59500 49700 180.555557 text
grestore
40500 54500 49500 54500 10 line
49500 54500 49500 56500 10 line
49500 56500 40500 56500 10 line
40500 56500 40500 54500 10 line
gsave
57300 50000 57000 50000 10 line
57700 50000 58000 50000 10 line
57300 50000 57660 50150 10 line
57660 50000 50 0 360 10 darc
grestore
gsave
false false false false 260.000000 [(S5) ] 0 57410 50200 180.555557 text
grestore
56500 53400 59500 53400 10 line
gsave
false true false false 260.000000 [(GROUNDA) ] 0 59500 53500 180.555557 text
grestore
56500 55200 59500 55200 10 line
gsave
false true false false 260.000000 [(GROUNDA) ] 0 59500 55300 180.555557 text
grestore
gsave
54800 55100 54500 55100 10 line
55200 55100 55500 55100 10 line
54800 55100 55200 55300 10 line
55160 55100 50 0 360 10 darc
54800 55600 54500 55600 10 line
55200 55600 55500 55600 10 line
54800 55600 55200 55800 10 line
55160 55600 50 0 360 10 darc
55000 55700 55000 55600 10 line
55000 55300 55000 55200 10 line
55000 55500 55000 55400 10 line
grestore
gsave
false false false false 260.000000 [(S2) ] 0 54910 55900 180.555557 text
grestore
gsave
54800 53300 54500 53300 10 line
55200 53300 55500 53300 10 line
54800 53300 55200 53500 10 line
55160 53300 50 0 360 10 darc
54800 53800 54500 53800 10 line
55200 53800 55500 53800 10 line
54800 53800 55200 54000 10 line
55160 53800 50 0 360 10 darc
55000 53900 55000 53800 10 line
55000 53500 55000 53400 10 line
55000 53700 55000 53600 10 line
grestore
gsave
false false false false 260.000000 [(S3) ] 0 54910 54100 180.555557 text
grestore
55500 55100 55800 55100 10 line
55800 55100 55800 54800 10 line
55500 53300 56000 53300 10 line
56000 53300 56000 53000 10 line
gsave
54800 49500 54500 49500 10 line
55200 49500 55500 49500 10 line
54800 49500 55200 49700 10 line
55160 49500 50 0 360 10 darc
54800 50000 54500 50000 10 line
55200 50000 55500 50000 10 line
54800 50000 55200 50200 10 line
55160 50000 50 0 360 10 darc
55000 50100 55000 50000 10 line
55000 49700 55000 49600 10 line
55000 49900 55000 49800 10 line
grestore
gsave
false false false false 260.000000 [(S4) ] 0 54910 50300 180.555557 text
grestore
55500 49500 56200 49500 10 line
56200 49500 56200 49200 10 line
newpath
43200 47200
25
0 360 arc
fill
60 60 54670 44470 fbox
60 60 54670 43470 fbox
newpath
56500 53400
25
0 360 arc
fill
newpath
56500 49600
25
0 360 arc
fill
60 60 54670 43970 fbox
newpath
45700 48000
25
0 360 arc
fill
newpath
45700 48000
25
0 360 arc
fill
newpath
45900 43500
25
0 360 arc
fill
newpath
45900 43500
25
0 360 arc
fill
newpath
51500 48400
25
0 360 arc
fill
newpath
51500 47500
25
0 360 arc
fill
newpath
51500 48400
25
0 360 arc
fill
newpath
51500 48400
25
0 360 arc
fill
newpath
48000 47000
25
0 360 arc
fill
newpath
43200 47200
25
0 360 arc
fill
newpath
43200 47200
25
0 360 arc
fill
60 60 41470 47970 fbox
60 60 41470 47170 fbox
60 60 41470 46370 fbox
newpath
44400 46500
25
0 360 arc
fill
newpath
44400 46500
25
0 360 arc
fill
newpath
44400 46500
25
0 360 arc
fill
newpath
44500 46500
25
0 360 arc
fill
newpath
43400 43000
25
0 360 arc
fill
newpath
43400 43000
25
0 360 arc
fill
newpath
43400 43000
25
0 360 arc
fill
newpath
44700 43000
25
0 360 arc
fill
newpath
44800 43000
25
0 360 arc
fill
newpath
44700 43000
25
0 360 arc
fill
newpath
44700 43000
25
0 360 arc
fill
newpath
44500 46500
25
0 360 arc
fill
newpath
44500 46500
25
0 360 arc
fill
newpath
44800 43000
25
0 360 arc
fill
newpath
44800 43000
25
0 360 arc
fill
newpath
48000 42200
25
0 360 arc
fill
newpath
51500 47500
25
0 360 arc
fill
newpath
51500 47500
25
0 360 arc
fill
newpath
51300 46200
25
0 360 arc
fill
newpath
51300 46200
25
0 360 arc
fill
newpath
51300 46200
25
0 360 arc
fill
newpath
51300 46200
25
0 360 arc
fill
newpath
51300 46200
25
0 360 arc
fill
newpath
51300 46200
25
0 360 arc
fill
newpath
45700 48000
25
0 360 arc
fill
newpath
48000 47000
25
0 360 arc
fill
newpath
48000 47000
25
0 360 arc
fill
newpath
45900 43500
25
0 360 arc
fill
newpath
48000 42200
25
0 360 arc
fill
newpath
48000 42200
25
0 360 arc
fill
newpath
53500 50000
25
0 360 arc
fill
newpath
53500 53800
25
0 360 arc
fill
newpath
54000 53300
25
0 360 arc
fill
newpath
54000 49500
25
0 360 arc
fill
60 60 59470 54770 fbox
60 60 59470 55570 fbox
newpath
53500 53800
25
0 360 arc
fill
newpath
53500 53800
25
0 360 arc
fill
newpath
54000 53300
25
0 360 arc
fill
newpath
54000 53300
25
0 360 arc
fill
60 60 59470 52970 fbox
60 60 59470 53770 fbox
newpath
53500 50000
25
0 360 arc
fill
newpath
53500 50000
25
0 360 arc
fill
newpath
54000 49500
25
0 360 arc
fill
newpath
54000 49500
25
0 360 arc
fill
60 60 59470 49170 fbox
60 60 59470 49970 fbox
newpath
56500 49600
25
0 360 arc
fill
60 60 59470 49570 fbox
newpath
56500 49600
25
0 360 arc
fill
newpath
56500 53400
25
0 360 arc
fill
60 60 59470 53370 fbox
newpath
56500 53400
25
0 360 arc
fill
60 60 59470 55170 fbox
showpage
%%End
